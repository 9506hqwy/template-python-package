name: CI

on:
  push:
    branches: [ main ]
    tags-ignore: [ '**' ]

jobs:
  build_vers:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    container:
      image: python:${{ matrix.version }}

    steps:
    - uses: actions/checkout@v4

    - name: Install Test Libraries
      run: pip install tox

    - name: Check Format
      run: tox run -e format

    - name: Check Lint
      run: tox run -e lint

    - name: Check Type Hint
      run: tox run -e type

    - name: Run Tests
      run: |
        VER=$(echo '${{ matrix.version }}' | sed -e 's/\.//')
        tox run -e py${VER}

    - name: Generate Coverage Report
      run: |
        pip install coverage

        mkdir ./artifacts
        coverage report > ./artifacts/Summary.txt
        coverage report --format=markdown > ./artifacts/SummaryGithub.md

        coverage html --directory=./coverage_html
        tar -C coverage_html -zcf ./artifacts/coverage.tar.gz .

    - name: Report Coverage
      run: |
        cat "./artifacts/Summary.txt"
        cat "./artifacts/SummaryGithub.md" > $GITHUB_STEP_SUMMARY

    - name: Install Build Libraries
      run: pip install build

    - name: Create Artifacts
      run: python -m build

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: artifacts-${{ runner.os }}-${{ runner.arch }}-${{ matrix.version }}-${{ github.run_number }}
        path: |
          artifacts
          dist
        retention-days: 1

  build_win:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install Test Libraries
      run: pip install tox

    - name: Run Tests
      run: tox

    - name: Generate Coverage Report
      run: |
        pip install coverage

        mkdir .\artifacts
        coverage report > .\artifacts\Summary.txt
        coverage report --format=markdown > .\artifacts\SummaryGithub.md

        coverage html --directory=.\coverage_html
        Compress-Archive -Path 'coverage_html\*' -DestinationPath ".\artifacts\coverage.zip"

    - name: Report Coverage
      run: |
        Get-Content ".\artifacts\Summary.txt"
        Get-Content ".\artifacts\SummaryGithub.md" > $env:GITHUB_STEP_SUMMARY

    - name: Install Build Libraries
      run: |
        pip install build
        pip install -r requirements-doc.txt

    - name: Create Artifacts
      run: |
        python -m build

        $REPOSITORY_NAME = ($env:GITHUB_REPOSITORY -Split '/')[1]
        sphinx-apidoc -F -f -a -H $REPOSITORY_NAME -A $env:GITHUB_REPOSITORY_OWNER -V latest -o doc src
        pushd doc
        .\make.bat html
        popd

        Compress-Archive -Path 'doc\_build\html\*' -DestinationPath ".\artifacts\help-${REPOSITORY_NAME}.zip"

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: artifacts-${{ runner.os }}-${{ runner.arch }}-${{ github.run_number }}
        path: |
          artifacts
          dist
        retention-days: 1
